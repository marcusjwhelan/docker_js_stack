version: "3.7"

services: 
    db:
        container_name: mysql-comp-js-stack
        image: mysql:8.0.19
        command: --default-authentication-plugin=mysql_native_password
        restart: always
        networks:
            js-stack-net:
        ports:
            - 3307:3306
        environment:
            - MYSQL_DATABASE=ctodo
            - MYSQL_ROOT_PASSWORD=example
        volumes:
            - ./docker_js_stack_api/db-service/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
            - js-stack-db:/var/lib/mysql/
    api:
        container_name: node-comp-js-stack
        image: docker-js-stack-api
        networks: 
            - js-stack-net
            - js-stack-com-net
        environment: 
            PORT: 8080
            MYSQL_HOST: db
            MYSQL_USER: test
            MYSQL_PASSWORD: example
            MYSQL_DB: ctodo
            MYSQL_PORT: 3306
        ports:
            - target: 8080
              published: 8080
              protocol: tcp
              mode: host
        volumes:
            - ./docker_js_stack_api:/app
            - js-stack-api:/app/node_modules
        working_dir: /app
        stdin_open: true
        tty: true
        restart: always
        depends_on: 
            - db
        command: npm run start
    client:
        container_name: react-comp-js-stack
        image: docker-js-stack-client
        networks: 
            - js-stack-com-net
        environment: 
            NODE_ENV: development
        ports:
            - 80:80
        depends_on: 
            - api
        volumes:
            - ./docker_js-stack_client:/var/www
            - js-stack-client:/var/www/node_modules

networks:
    js-stack-net:
    js-stack-com-net:

volumes:
    js-stack-db:
        driver: local
    js-stack-api:
    js-stack-client: